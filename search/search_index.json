{
    "docs": [
        {
            "location": "/",
            "text": "Quick Start to using Mythril API\n\n\nNote: API key behavior will be changing shortly\n\n\nAfter you get your Mythril API key, you can use it to:\n\n\n\n\nSubmit evm bytecode for analysis and\n\n\nReview the results of previous submissions\n\n\n\n\nWe will use \ncurl\n commands here, but there\nwill be language binding for various programming languages.\n\n\nTo follow the examples below, set the environment variable \n$MYTHRIL_API_KEY\n\nto your Mythril Platform API key.\n\n\nSubmitting a EVM bytecode(s)\n\n\nTo start an analysis, you need to submit the EVM bytecode of one or multiple\nsmart contracts. Send a HTTP POST request to the \nmythril/v1/analysis\n endpoint:\n\n\n$ EVM_BYTECODE='0x3f'  # replace with a real contract\n$ curl -i -X POST https://api.mythril.ai/mythril/v1/analysis \\\n  -H \"Authorization: Bearer $MYTHRIL_API_KEY\" \\\n  -H 'Content-Type: application/json' \\\n  -d \"{ \\\"type\\\": \\\"bytecode\\\",  \\\"contract\\\": \\\"$EVM_BYTECODE\\\" }\"\n\n\n\n\nThis should return the response:\n\n\nHTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Type: application/json; charset=utf-8\nDate: Tue, 28 Aug 2018 21:07:22 GMT\nETag: W/\"41-IC6lt17lHup/pxONgTVPHzOnYKQ\"\nServer: nginx/1.12.1\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-DNS-Prefetch-Control: off\nX-Download-Options: noopen\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nContent-Length: 65\nConnection: keep-alive\n\n{\"result\":\"Queued\",\"uuid\":\"df946130-a25c-4268-b2d0-e3ccc592f7c0\"}\n$\n\n\n\n\nChecking the status of analysis submission\n\n\nIn the previous section we kicked off an vulnerability analysis job\nwhich is run asynchronously. To check the status of the analysis job \nuse the uuid returned in the HTTP response. The uuid received in the\nlast section was \ndf946130-a25c-4268-b2d0-e3ccc592f7c0\n. Send a HTTP\nHTTP GET request to \n/mythril/v1/analysis/$UUID\n:\n\n\n$ UUID=df946130-a25c-4268-b2d0-e3ccc592f7c0\n$ curl -i -X GET https://api.mythril.ai/mythril/v1/analysis/$UUID \\\n  -H \"Authorization: Bearer $MYTHRIL_API_KEY\"\n\n\n\n\nIf the job has run successfully, you should get the following response:\n\n\nHTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Type: application/json; charset=utf-8\nDate: Tue, 28 Aug 2018 21:16:59 GMT\nETag: W/\"43-jqZkT/RfYhCeqpXFo7NYY2rqqjM\"\nServer: nginx/1.12.1\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-DNS-Prefetch-Control: off\nX-Download-Options: noopen\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nContent-Length: 67\nConnection: keep-alive\n\n{\"result\":\"Finished\",\"uuid\":\"df946130-a25c-4268-b2d0-e3ccc592f7c0\"}\n\n\n\n\nNotice that the status result says \"Finished\". Another result could have been \"Error\". For example changing the ending \nc0\n to \ncb\n in the UUID returns:\n\n\n{\"result\":\"Error\",\"message\":\"Analysis does not exist with id: df946130-a25c-4268-b2d0-e3ccc592f7cb\"}\n\n\n\n\nRetrieving Analysis Reports\n\n\nOnce we've verified that the job with our UUID has finished, we can retrieve reports. To\nreceive the results, send a HTTP GET request with URI \n/mythril/v1/analysis/${UUID}/issues\n:\n\n\n$ curl -i -X GET https://api.mythril.ai/mythril/v1/analysis/$UUID/issues \\\n-H \"Authorization: Bearer $MYTHRIL_API_KEY\"\n\n\n\n\nThe returns:\n\n\nHTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Type: application/json; charset=utf-8\nDate: Tue, 28 Aug 2018 21:27:05 GMT\nETag: W/\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\"\nServer: nginx/1.12.1\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-DNS-Prefetch-Control: off\nX-Download-Options: noopen\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nContent-Length: 2\nConnection: keep-alive\n\n[]\n\n\n\n\nNo issues were detected, so the result is an empty list \n[]\n.\n\n\nHowever, for a real contract like this one:\n\n\npragma solidity ^0.4.23;\n\ncontract IntegerOverflow {\n    uint public count = 1955;\n\n    function run(uint256 input) public {\n        count *= input;\n    }\n}\n\n\n\n\nWhich produces the EVM bytecode:\n\n\n\"0x60806040526107a360005534801561001657600080fd5b5060e4806100256000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd14604e578063a444f5e9146076575b600080fd5b348015605957600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b806000808282540292505081905550505600a165627a7a72305820ebde511764d3e81b205e4cd886a3996c87262aff0d4aedbfc501ab93c761b2b80029\"\n\n\n\n\nYou should get the following result (formatted with \njq\n:\n\n\n[\n  {\n    \"address\": 174,\n    \"contract\": \"MAIN\",\n    \"debug\": \"calldata_MAIN[4]: 0xf005c0ffff870000000000000000000000001fffffffffffffffffffffffbde7\\nstorage_0: 0x7d18af89c36b8e2a88e90ad37012dedc916f009ecb9b9a648c567a6508469000\\ncalldata_MAIN[0]: 0xa444f5e900000000000000000000000000000000000000000000000000000000\\ncalldatasize_MAIN: 0x4\\ncallvalue: 0x0\\n\",\n    \"description\": \"A possible integer overflow exists in the function `_function_0xa444f5e9`.\\nThe addition or multiplication may result in a value higher than the maximum representable integer.\",\n    \"function\": \"_function_0xa444f5e9\",\n    \"title\": \"Integer Overflow\",\n    \"type\": \"Warning\"\n  }\n]\n\n\n\n\nGetting the Mythril API version number\n\n\nIf you want to see what the current Mythril API version string is, issue a HTTP GET resquest to\nthe URL \nmythril/vi/version\n:\n\n\n$ curl -X GET https://api.mythril.ai/mythril/v1/version\n\n\n\n\nThis will return a version string such as \nv1.02\n (you don't need to supply an API key in order to run this).\n\n\nMore Information\n\n\nYou can download the \nopenapi specification\n for the Mythril API via \nmythril/vi/openapi.yaml\n:\n\n\n$ curl -X GET https://api.mythril.ai/mythril/v1/openapi.yaml\n\n\n\n\nSee also \nMythril API (v1)\n and the \nMythril Home Page\n.",
            "title": "Quick Start to using Mythril API"
        },
        {
            "location": "/#quick-start-to-using-mythril-api",
            "text": "Note: API key behavior will be changing shortly  After you get your Mythril API key, you can use it to:   Submit evm bytecode for analysis and  Review the results of previous submissions   We will use  curl  commands here, but there\nwill be language binding for various programming languages.  To follow the examples below, set the environment variable  $MYTHRIL_API_KEY \nto your Mythril Platform API key.",
            "title": "Quick Start to using Mythril API"
        },
        {
            "location": "/#submitting-a-evm-bytecodes",
            "text": "To start an analysis, you need to submit the EVM bytecode of one or multiple\nsmart contracts. Send a HTTP POST request to the  mythril/v1/analysis  endpoint:  $ EVM_BYTECODE='0x3f'  # replace with a real contract\n$ curl -i -X POST https://api.mythril.ai/mythril/v1/analysis \\\n  -H \"Authorization: Bearer $MYTHRIL_API_KEY\" \\\n  -H 'Content-Type: application/json' \\\n  -d \"{ \\\"type\\\": \\\"bytecode\\\",  \\\"contract\\\": \\\"$EVM_BYTECODE\\\" }\"  This should return the response:  HTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Type: application/json; charset=utf-8\nDate: Tue, 28 Aug 2018 21:07:22 GMT\nETag: W/\"41-IC6lt17lHup/pxONgTVPHzOnYKQ\"\nServer: nginx/1.12.1\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-DNS-Prefetch-Control: off\nX-Download-Options: noopen\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nContent-Length: 65\nConnection: keep-alive\n\n{\"result\":\"Queued\",\"uuid\":\"df946130-a25c-4268-b2d0-e3ccc592f7c0\"}\n$",
            "title": "Submitting a EVM bytecode(s)"
        },
        {
            "location": "/#checking-the-status-of-analysis-submission",
            "text": "In the previous section we kicked off an vulnerability analysis job\nwhich is run asynchronously. To check the status of the analysis job \nuse the uuid returned in the HTTP response. The uuid received in the\nlast section was  df946130-a25c-4268-b2d0-e3ccc592f7c0 . Send a HTTP\nHTTP GET request to  /mythril/v1/analysis/$UUID :  $ UUID=df946130-a25c-4268-b2d0-e3ccc592f7c0\n$ curl -i -X GET https://api.mythril.ai/mythril/v1/analysis/$UUID \\\n  -H \"Authorization: Bearer $MYTHRIL_API_KEY\"  If the job has run successfully, you should get the following response:  HTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Type: application/json; charset=utf-8\nDate: Tue, 28 Aug 2018 21:16:59 GMT\nETag: W/\"43-jqZkT/RfYhCeqpXFo7NYY2rqqjM\"\nServer: nginx/1.12.1\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-DNS-Prefetch-Control: off\nX-Download-Options: noopen\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nContent-Length: 67\nConnection: keep-alive\n\n{\"result\":\"Finished\",\"uuid\":\"df946130-a25c-4268-b2d0-e3ccc592f7c0\"}  Notice that the status result says \"Finished\". Another result could have been \"Error\". For example changing the ending  c0  to  cb  in the UUID returns:  {\"result\":\"Error\",\"message\":\"Analysis does not exist with id: df946130-a25c-4268-b2d0-e3ccc592f7cb\"}",
            "title": "Checking the status of analysis submission"
        },
        {
            "location": "/#retrieving-analysis-reports",
            "text": "Once we've verified that the job with our UUID has finished, we can retrieve reports. To\nreceive the results, send a HTTP GET request with URI  /mythril/v1/analysis/${UUID}/issues :  $ curl -i -X GET https://api.mythril.ai/mythril/v1/analysis/$UUID/issues \\\n-H \"Authorization: Bearer $MYTHRIL_API_KEY\"  The returns:  HTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Type: application/json; charset=utf-8\nDate: Tue, 28 Aug 2018 21:27:05 GMT\nETag: W/\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\"\nServer: nginx/1.12.1\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-DNS-Prefetch-Control: off\nX-Download-Options: noopen\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nContent-Length: 2\nConnection: keep-alive\n\n[]  No issues were detected, so the result is an empty list  [] .  However, for a real contract like this one:  pragma solidity ^0.4.23;\n\ncontract IntegerOverflow {\n    uint public count = 1955;\n\n    function run(uint256 input) public {\n        count *= input;\n    }\n}  Which produces the EVM bytecode:  \"0x60806040526107a360005534801561001657600080fd5b5060e4806100256000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd14604e578063a444f5e9146076575b600080fd5b348015605957600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b806000808282540292505081905550505600a165627a7a72305820ebde511764d3e81b205e4cd886a3996c87262aff0d4aedbfc501ab93c761b2b80029\"  You should get the following result (formatted with  jq :  [\n  {\n    \"address\": 174,\n    \"contract\": \"MAIN\",\n    \"debug\": \"calldata_MAIN[4]: 0xf005c0ffff870000000000000000000000001fffffffffffffffffffffffbde7\\nstorage_0: 0x7d18af89c36b8e2a88e90ad37012dedc916f009ecb9b9a648c567a6508469000\\ncalldata_MAIN[0]: 0xa444f5e900000000000000000000000000000000000000000000000000000000\\ncalldatasize_MAIN: 0x4\\ncallvalue: 0x0\\n\",\n    \"description\": \"A possible integer overflow exists in the function `_function_0xa444f5e9`.\\nThe addition or multiplication may result in a value higher than the maximum representable integer.\",\n    \"function\": \"_function_0xa444f5e9\",\n    \"title\": \"Integer Overflow\",\n    \"type\": \"Warning\"\n  }\n]",
            "title": "Retrieving Analysis Reports"
        },
        {
            "location": "/#getting-the-mythril-api-version-number",
            "text": "If you want to see what the current Mythril API version string is, issue a HTTP GET resquest to\nthe URL  mythril/vi/version :  $ curl -X GET https://api.mythril.ai/mythril/v1/version  This will return a version string such as  v1.02  (you don't need to supply an API key in order to run this).",
            "title": "Getting the Mythril API version number"
        },
        {
            "location": "/#more-information",
            "text": "You can download the  openapi specification  for the Mythril API via  mythril/vi/openapi.yaml :  $ curl -X GET https://api.mythril.ai/mythril/v1/openapi.yaml  See also  Mythril API (v1)  and the  Mythril Home Page .",
            "title": "More Information"
        }
    ]
}